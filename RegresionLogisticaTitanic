import pandas as pd
import numpy as np
import matplotlib as plot
from sklearn.linear_model import  LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report


datos = pd.read_csv('Titanic.csv')
datos.head()

def analizarNulos(columna, dataset):
    print('La columna llamada '+columna+' tiene:',dataset[columna].isnull().sum(),' datos nulos')

analizarNulos('Pclass',datos)
analizarNulos('Name',datos)
analizarNulos('Sex',datos)
analizarNulos('Age',datos)
analizarNulos('Ticket',datos)

datos['Age'] =  datos['Age'].fillna('ns')

datos.dtypes
datos = pd.get_dummies(datos,drop_first=True)

nro_filas = datos.shape[0]
nro_columnas = datos.shape[1]
print('El dataset contiene '+str(nro_filas)+ ' filas y '+ str(nro_columnas)+' columnas.')

X_train,X_test,y_train,y_test = train_test_split(datos.drop('Survived',axis=1),datos['Survived'])

LogReg = LogisticRegression(solver='lbfgs')

LogReg.fit(X_train,y_train)

# Realizar predicciones
y_pred = LogReg.predict(X_test)

# Evaluar el modelo
accuracy = accuracy_score(y_test, y_pred)
print(f"Exactitud del modelo: {accuracy:.2f}")
print("Matriz de confusión:")
print(confusion_matrix(y_test, y_pred))
print("Reporte de clasificación:")
print(classification_report(y_test, y_pred))


